[tox]
min_version = 4.0
# these are the default environments, i.e. the list of tests running when you
# execute `tox` in the command-line without anything else
envlist =
    lint
    build
    tests
    gap-tests
    soap-bpnn-tests
    pet-tests
    nanopet-tests
    deprecated-pet-tests

[testenv]
passenv = *
lint_folders =
    "{toxinidir}/examples/" \
    "{toxinidir}/src/" \
    "{toxinidir}/tests/" \
    "{toxinidir}/docs/src/"

[testenv:lint]
description = Run linters and type checks
package = skip
deps =
    ruff
    mypy
    sphinx-lint
commands =
    ruff format --diff {[testenv]lint_folders}
    ruff check {[testenv]lint_folders}
    mypy {[testenv]lint_folders}
    sphinx-lint \
        --enable all \
        --disable line-too-long \
        -i "{toxinidir}/docs/src/examples" \
        {[testenv]lint_folders} "{toxinidir}/README.rst"

[testenv:format]
description = Abuse tox to do actual formatting on all files.
package = skip
deps = ruff
commands =
    ruff format {[testenv]lint_folders}
    ruff check --fix-only {[testenv]lint_folders} "{toxinidir}/README.rst" {posargs}

[testenv:tests]
description = Run basic package tests with pytest (not the architectures)
passenv = *
deps =
    pytest
    pytest-cov
    pytest-xdist
    huggingface_hub
    spherical  # for nanoPET spherical target
    torch-pme  # for long-range tests
    wandb
changedir = tests
extras =  # architectures used in the package tests
    soap-bpnn
    nanopet
allowlist_externals = bash
commands_pre = bash {toxinidir}/tests/resources/generate-outputs.sh
commands =
    pytest \
        --numprocesses=auto \
        --cov={env_site_packages_dir}/metatrain \
        --cov-append \
        --cov-report= \
        --import-mode=append \
        {posargs}

[testenv:build]
description = builds the package and checks integrity
usedevelop = true
deps =
    build
    check-manifest
    twine
allowlist_externals = rm
commands_pre =
    rm -f {toxinidir}/dist/*.whl
    rm -f {toxinidir}/dist/*.tar.gz
commands =
    python -m build
    twine check dist/*.tar.gz dist/*.whl
    check-manifest {toxinidir}

[testenv:soap-bpnn-tests]
description = Run SOAP-BPNN tests with pytest
passenv = *
deps =
    pytest
    spherical  # tensor target tests
extras = soap-bpnn
changedir = src/metatrain/soap_bpnn/tests/
commands =
    pytest {posargs}

[testenv:deprecated-pet-tests]
description = Run deprecated PET tests with pytest
passenv = *
deps =
    pytest
extras = deprecated-pet
changedir = src/metatrain/deprecated/pet/tests/
commands =
    python -m pip uninstall -y pet_neighbors_convert
    python -m pip install pet-neighbors-convert --no-build-isolation
    pytest {posargs}

[testenv:pet-tests]
description = Run PET tests with pytest
passenv = *
deps =
    pytest
extras = pet
changedir = src/metatrain/pet/tests/
commands =
    pytest {posargs}

[testenv:gap-tests]
description = Run GAP tests with pytest
passenv = *
deps =
    pytest
extras = gap
changedir = src/metatrain/gap/tests/
commands =
    pytest {posargs}

[testenv:nanopet-tests]
description = Run NanoPET tests with pytest
passenv = *
deps =
    pytest
    spherical  # for nanoPET spherical target
extras = nanopet
changedir = src/metatrain/experimental/nanopet/tests/
commands =
    pytest {posargs}

[testenv:docs]
description = builds the documentation with sphinx
deps =
    -r docs/requirements.txt
allowlist_externals =
    bash
extras = # these models are used in the documentation
    gap
    soap-bpnn
commands_pre =
    # Run example and usage scripts.
    bash -c "set -e && cd {toxinidir}/examples/basic_usage && bash usage.sh"
    bash -c "set -e && cd {toxinidir}/examples/ase && bash train.sh"
    bash -c "set -e && cd {toxinidir}/examples/programmatic/llpr && bash train.sh"
    bash -c "set -e && cd {toxinidir}/examples/zbl && bash train.sh"
commands =
    sphinx-build \
        {posargs:-E} \
        --builder html \
        --doctree-dir docs/build/doctree \
        --fail-on-warning \
        docs/src docs/build/html
