[project]
name = "metatrain"
dynamic = ["version"]
requires-python = ">=3.9"

readme = "README.rst"
license = {text = "BSD-3-Clause"}
description = "Training and evaluating machine learning models for atomistic systems."
authors = [{name = "metatrain developers"}]

dependencies = [
    "ase < 3.23.0",
    "metatensor-learn==0.3.0",
    "metatensor-operations==0.3.0",
    "metatensor-torch==0.6.3",
    "jsonschema",
    "omegaconf",
    "python-hostlist",
    "torch",
    "vesin",
    "numpy < 2.0.0"
]

keywords = ["machine learning", "molecular modeling"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
homepage = "https://lab-cosmo.github.io/metatrain/latest/"
documentation = "https://lab-cosmo.github.io/metatrain/latest/"
repository = "https://github.com/lab-cosmo/metatrain"
# changelog = "TODO"

[project.scripts]
mtt = "metatrain.__main__:main"

### ======================================================================== ###

[build-system]
requires = [
    "setuptools >= 68",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
soap-bpnn = [
    "rascaline-torch @ git+https://github.com/luthaf/rascaline@5326b6e#subdirectory=python/rascaline-torch",
]
pet = [
  "pet @ git+https://github.com/lab-cosmo/pet@5d40710",
]
nanopet = []
gap = [
    "rascaline-torch @ git+https://github.com/luthaf/rascaline@5326b6e#subdirectory=python/rascaline-torch",
    "skmatter",
    "metatensor-learn",
    "scipy",
]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.dynamic]
version = {attr = "metatrain.__version__"}

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    "if __name__ == .__main__.:",
]
omit = [
    "*/site-packages/*",
    "*/metatrain/experimental/*"
]

[tool.coverage.paths]
source = [
    "src/metatrain",
    ".tox/*/lib/python*/site-packages/metatrain"
]

[tool.black]
exclude = 'docs/src/examples'

[tool.isort]
skip = "__init__.py"
profile = "black"
line_length = 88
indent = 4
include_trailing_comma = true
lines_after_imports = 2
known_first_party = "metatrain"

[tool.mypy]
exclude = [
    "docs/src/examples"
]
follow_imports = 'skip'
ignore_missing_imports = true

[tool.pytest.ini_options]
# ignore" a bunch of internal warnings with Python 3.12 and PyTorch
filterwarnings = [
    "ignore:ast.Str is deprecated and will be removed in Python 3.14:DeprecationWarning",
    "ignore:Attribute s is deprecated and will be removed in Python 3.14:DeprecationWarning",
    "ignore:ast.NameConstant is deprecated and will be removed in Python 3.14:DeprecationWarning",
]
