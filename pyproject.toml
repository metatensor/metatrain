[project]
name = "metatrain"
dynamic = ["version"]
requires-python = ">=3.9"

readme = "README.rst"
license = {text = "BSD-3-Clause"}
description = "Training and evaluating machine learning models for atomistic systems."
authors = [{name = "metatrain developers"}]

dependencies = [
    "ase",
    "metatensor-learn==0.3.1",
    "metatensor-operations==0.3.1",
    "metatensor-torch==0.7.3",
    "jsonschema",
    "omegaconf",
    "python-hostlist",
    "vesin",
]

keywords = ["machine learning", "molecular modeling"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: BSD License",
    "Operating System :: POSIX",
    "Operating System :: MacOS :: MacOS X",
    "Operating System :: Microsoft :: Windows",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
    "Topic :: Scientific/Engineering :: Chemistry",
    "Topic :: Scientific/Engineering :: Physics",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
homepage = "https://metatensor.github.io/metatrain"
documentation = "https://metatensor.github.io/metatrain"
repository = "https://github.com/metatensor/metatrain"
issues = "https://github.com/metatensor/metatrain/issues"
changelog = "https://metatensor.github.io/metatrain/latest/dev-docs/changelog.html"

[project.scripts]
mtt = "metatrain.__main__:main"

### ======================================================================== ###

[build-system]
requires = [
    "setuptools >= 68",
    "setuptools_scm>=8",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project.optional-dependencies]
soap-bpnn = [
    "featomic-torch >=0.6,<0.7",
    "wigners",
]
pet = [
    "pet-neighbors-convert",
    "torch_geometric",
    "matscipy",
    "scikit-learn",
    "pathos",
    "scipy",
]
nanopet = []
gap = [
    "featomic-torch >=0.6,<0.7",
    "skmatter",
    "scipy",
]

[tool.check-manifest]
ignore = ["src/metatrain/_version.py"]

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
version_file = "src/metatrain/_version.py"

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    "if __name__ == .__main__.:",
]
omit = [
    "*/site-packages/*",
    "*/metatrain/experimental/*",
    "*/metatrain/utils/testing/*"
]

[tool.coverage.paths]
source = [
    "src/metatrain",
    ".tox/*/lib/python*/site-packages/metatrain"
]

[tool.ruff]
exclude = ["docs/src/examples/**", "src/metatrain/_version.py"]
line-length = 88

[tool.ruff.lint]
select = ["E", "F", "B", "I"]
ignore = ["B018", "B904"]

[tool.ruff.lint.isort]
lines-after-imports = 2
known-first-party = ["metatrain"]
known-third-party = ["torch"]

[tool.ruff.format]
docstring-code-format = true

[tool.mypy]
exclude = [
    "docs/src/examples"
]
follow_imports = 'skip'
ignore_missing_imports = true

[tool.pytest.ini_options]
# ignore" a bunch of internal warnings with Python 3.13 and PyTorch
filterwarnings = [
    "ignore:ast.Str is deprecated and will be removed in Python 3.14:DeprecationWarning",
    "ignore:Attribute s is deprecated and will be removed in Python 3.14:DeprecationWarning",
    "ignore:ast.NameConstant is deprecated and will be removed in Python 3.14:DeprecationWarning",
]
